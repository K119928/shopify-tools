// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

enum ImageSource {
  Manual
  Auto
}

enum ImageSyncStatus {
  Synced
  NotSync
}

model Image {
  id          String          @id @default(cuid())
  name        String
  source      ImageSource
  sourceLink  String?
  cloudLink   String
  backupLink  String?
  provider    String?
  providerRef String?
  syncStatus  ImageSyncStatus @default(NotSync)
  product     Product?        @relation(fields: [productId], references: [id])
  productId   String?
  createdAt   DateTime        @default(now()) @map(name: "created_at")
  updatedAt   DateTime        @updatedAt @map(name: "updated_at")

  @@map(name: "images")
}

model Product {
  id              String  @id @default(cuid())
  name            String?
  price           Float?
  description     String?
  descriptionHtml String?
  category        String?

  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  images      Image[]
  collections ProductsOnCollections[]

  @@map(name: "products")
}

model Collection {
  id   String @id @default(cuid())
  name String

  products ProductsOnCollections[]

  @@map(name: "collections")
}

model ProductsOnCollections {
  product      Product    @relation(fields: [productId], references: [id])
  productId    String
  collection   Collection @relation(fields: [collectionId], references: [id])
  collectionId String
  priority     Int?
  assignedAt   DateTime   @default(now())

  @@id([productId, collectionId])
  @@map(name: "products_on_collections")
}
